# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~
GET     /                           controllers.MainController.index
POST     /register                  controllers.AuthController.register
#POST    /login                     controllers.AuthController.login
#GET     /logout                    controllers.AuthController.logout

# tags
GET      /api/tags                  controllers.TagController.index
POST     /api/tags                  controllers.TagController.create
DELETE   /api/tags/:id              controllers.TagController.destroy(id: Long)

# get questions with a specific tag

# questions and question threads

GET    /api/questions                     controllers.QuestionController.index
GET    /api/questions/tagged/:tag         controllers.QuestionController.tagged(tag: String)
GET    /api/questions/:id                 controllers.QuestionController.show(id: Long)
GET    /api/questions/:id/thread          controllers.QuestionController.showThread(id: Long)
POST   /api/questions                     controllers.QuestionController.create
PUT    /api/questions/:id                 controllers.QuestionController.update(id: Long)
PUT    /api/questions/:id/correctanswer   controllers.QuestionController.setCorrectAnswer(id: Long)
DELETE /api/questions/:id                 controllers.QuestionController.destroy(id: Long)

POST   /api/questions/:id/markFavourite   controllers.QuestionController.markFavourite(id: Long)
DELETE /api/questions/:id/removeFavourite controllers.QuestionController.removeFavourite(id: Long)

# answers, answer comments and voting
#POST   /api/questions/:qId/answer         controllers.AnswerController.create(qId:Long)
#PUT    /api/questions/:qId/answer/:id     controllers.AnswerController.update(qId: Long, id: Long)
#DELETE /api/questions/:qId/answer/:id     controllers.AnswerController.destroy(qId: Long, id: Long)

#POST   /api/answer/:id/upvote             controllers.AnswerController.upvote(id: Long)
#POST   /api/answer/:id/downvote           controllers.AnswerController.downvote(id: Long)

#POST   /api/answer/:id/comment            controllers.CommentController.create(id: Long)
#PUT    /api/answer/:aId/comment/:id       controllers.CommentController.update(aId: Long, id: Long)
#DELETE /api/answer/:aId/comment/:id       controllers.CommentController.destroy(aId: Long, id: Long)
# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)
