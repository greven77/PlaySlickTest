# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~
GET     /                           controllers.MainController.index
POST    /api/register                   controllers.AuthController.register
POST    /api/login                      controllers.AuthController.login
GET     /api/logout                     controllers.AuthController.logout

# tags
GET      /api/tags                  controllers.TagController.index
POST     /api/tags                  controllers.TagController.create
DELETE   /api/tags/:id              controllers.TagController.destroy(id: Long)

# get questions with a specific tag

# questions and question threads

GET    /api/questions                     controllers.QuestionController.index
GET    /api/questions/tagged/:tag         controllers.QuestionController.tagged(tag: String)
GET    /api/questions/:id                 controllers.QuestionController.show(id: Long)
GET    /api/questions/:id/thread          controllers.QuestionController.showThread(id: Long)
POST   /api/questions                     controllers.QuestionController.create
#must be thread owner
PUT    /api/questions/:id                 controllers.QuestionController.update(id: Long)
#must be thread owner
PUT    /api/questions/:id/correctanswer   controllers.QuestionController.setCorrectAnswer(id: Long)
#must be thread owner
DELETE /api/questions/:id                 controllers.QuestionController.destroy(id: Long)

POST   /api/questions/:id/markfavourite   controllers.QuestionController.markFavourite(id: Long)
DELETE /api/questions/:id/removefavourite controllers.QuestionController.removeFavourite(id: Long)

# answers, answer comments and voting
POST   /api/questions/:qId/answer         controllers.AnswerController.create(qId:Long)
#must be answer owner
PUT    /api/questions/:qId/answer/:id     controllers.AnswerController.update(qId: Long, id: Long)
#must be answer owner or question owner
DELETE /api/questions/:qId/answer/:id     controllers.AnswerController.destroy(qId: Long, id: Long)

#must be other than answer owner
POST   /api/answer/:id/vote             controllers.AnswerController.vote(id: Long)


# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)
